# Cloud SQL Connector Configuration
# Cloud SQL Connector provides Google-managed connection pooling via Cloud SQL Admin API
# This is NOT PgBouncer - it's a different Google Cloud managed service that:
# - Handles IAM authentication automatically
# - Provides SSL/TLS encryption
# - Manages IP whitelisting
# - Connection pooling at Google infrastructure level
spring.cloud.gcp.sql.enabled=true
spring.cloud.gcp.sql.database-name=${DB_NAME}
spring.cloud.gcp.sql.instance-connection-name=${INSTANCE_CONNECTION_NAME}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASS}

# HikariCP Pool Settings (still configurable with Cloud SQL Connector!)
# Optimized for Cloud Run serverless workloads
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=0
spring.datasource.hikari.connection-timeout=10000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=600000

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
