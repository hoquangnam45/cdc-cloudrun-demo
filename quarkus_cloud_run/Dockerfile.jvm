####
# Multi-stage Dockerfile to build Quarkus application from source
# Stage 1: Build the application
####
FROM registry.access.redhat.com/ubi8/openjdk-21:1.23 AS builder

# Install required build tools
USER root
RUN microdnf install -y gzip tar && microdnf clean all

USER 185

WORKDIR /build

# Copy Maven wrapper and pom.xml first for better layer caching
COPY --chown=185 mvnw mvnw.cmd pom.xml ./
COPY --chown=185 .mvn .mvn

# Download dependencies (cached layer if pom.xml doesn't change)
RUN ./mvnw dependency:go-offline -B

# Copy source code
COPY --chown=185 src ./src

# Build the application
RUN ./mvnw package -DskipTests -B

####
# Stage 2: Create the runtime image
####
FROM registry.access.redhat.com/ubi8/openjdk-21:1.23

####
# Stage 2: Create the runtime image
####
FROM registry.access.redhat.com/ubi8/openjdk-21:1.23

ENV LANGUAGE='en_US:en'

# Copy the built application from builder stage
COPY --from=builder --chown=185 /build/target/quarkus-app/lib/ /deployments/lib/
COPY --from=builder --chown=185 /build/target/quarkus-app/*.jar /deployments/
COPY --from=builder --chown=185 /build/target/quarkus-app/app/ /deployments/app/
COPY --from=builder --chown=185 /build/target/quarkus-app/quarkus/ /deployments/quarkus/

EXPOSE 8080
USER 185
ENV JAVA_OPTS_APPEND="-Dquarkus.http.host=0.0.0.0 -Djava.util.logging.manager=org.jboss.logmanager.LogManager"
ENV JAVA_APP_JAR="/deployments/quarkus-run.jar"

ENTRYPOINT [ "/opt/jboss/container/java/run/run-java.sh" ]
